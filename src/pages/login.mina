<config>
{

}
</config>
<template>
  <block  wx:if="{{isLoading}}">
    <view class="loading flex flex-align-center">
      <view class="loading-warp">
        <image src="../assets/images/loading.svg"></image>
        <view class="tips">正在加载...</view>
      </view>
    </view>
  </block>
  <block wx:else>
    <view class="login-top">
      <image src="../assets/images/login/top2.jpg"></image>
    </view>
    <view class="login-form">
      <view class="register-form">
        <view class="flex flex-align-center register-box mt-20">
          <view class="icon icon-mobile mr-30"></view>
          <input class="flex1 input-box" type="number" placeholder="输入手机号码" value="{{login.phone}}" data-type="phone" maxlength="11" bindinput="changeValue" />
        </view>
        <view class="flex flex-align-center register-box mt-20">
          <view class="icon icon-shield mr-30"></view>
          <input class="flex1 input-box" type="text" maxlength="6" placeholder="输入验证码" value="{{login.code}}" data-type="code" bindinput="changeValue" />
          <view class="{{btnDisabled ? 'code-count-down':'code-btn'}}" catchtap="getCode">{{btnText}}</view>
        </view>
      </view>
      <!--<view class="login-form-item flex flex-align-center">
        <view class="left flex1 flex flex-align-center">
          <view class="label">手机号</view>
          <view class="cont flex1" >
            <input type="number" maxlength="11" value="{{login.phone}}" data-type="phone" bindinput="changeValue" />
          </view>
        </view>
        <text class="btn btn-plain {{btnDisabled?'btn-gray':''}}" catchtap="getCode">{{btnText}}</text>
      </view>
      <view class="login-form-item flex flex-align-center">
        <view class="left flex1 flex flex-align-center">
          <view class="label">验证码</view>
          <view class="cont flex1" >
            <input type="text" maxlength="6" value="{{login.code}}" data-type="code" bindinput="changeValue" />
          </view>
        </view>
      </view>-->
      <view class="submit "><text  class="btn btn-primary btn-lg btn-block" catchtap="loginSubmit">登录/注册</text></view>
    </view>
  </block>

</template>

<script>
  import { Page } from '@tinajs/tina'
  import wechat from '@/until/wechat'
  import {tinax} from '@/store'
Page.define({
  mixins: [
    tinax.connect({
      getters (getters) {
        return {
          info: getters.getUserInfo(),
        };
      },
      actions ({SetUserInfo,SetClassList}) {
        return {
          SetUserInfo,SetClassList
        }
      },
    }),
  ],
  data: {
    login: {
      phone:'',
      code:''
    },
    btnText:'获取验证码',
    btnDisabled:true,
    timer:60,
    inteval:'',
    isLoading:true,
    params:{
      clientId:'lite',
      secret:'qkt',
      userType:0
    }
  },
  async onLoad(){
    let accessToken=wx.getStorageSync('accessToken');
    if(this.$route.query.fromPath){
      this.data.fromPath=this.$route.query.fromPath;
    }
    if(accessToken){
      await this.getUserInfo();
      if(this.data.fromPath){
        this.$router.redirect(this.data.fromPath);
      }else{
        this.$router.redirect('/pages/home');
      }
    }else{
      this.login();
    }
   // this.api.answer.getBookAnswerIndex();
  },
  methods:{
    changeValue(e){
      let type=e.currentTarget.dataset.type;
      this.data.login[type]=e.detail.value;
      if(type==='phone' && e.detail.value.length===11){
        this.setData({
          btnDisabled:false
        })
      }else if(type==='phone' && e.detail.value.length!==11){
        this.setData({
          btnDisabled:true
        })
      }
      this.setData({
        [`login.${type}`]:e.detail.value
      })
    },
    async getCode(){
      if(!this.data.btnDisabled && this.data.btnText==='获取验证码'){
        this.setData({
          btnDisabled:true
        });
        if(!(/^1[3-9]\d{9}$/.test(this.data.login.phone))){
          this.$toast('手机格式有误，请重新输入');
          this.setData({
            btnDisabled:false
          });
          return false;
        }
        let res=await this.$api.until.sendSms({mobile:this.data.login.phone,userType:this.data.params.userType});
        if(res.rcode===300){
          this.$message.success('验证码已发送');
          this.inteval=setInterval(()=>{
            if(this.data.timer>0){
              this.data.timer--;
              this.setData({
                btnText:this.data.timer+'s'
              })
            }else{
              clearInterval(this.inteval);
              this.data.timer=60;
              this.setData({
                btnText:'获取验证码',
                btnDisabled:false
              });
            }
          },1000)
        }else{
          this.setData({
            btnDisabled:false
          });
        }
      }
    },
    async loginSubmit(e){
      if(this.data.login.phone===''){
        this.$toast('手机号码不能为空');
        return false;
      }
      if(!(/^1[3-9]\d{9}$/.test(this.data.login.phone))){
        this.$toast('手机号码格式不正确，请重新填写');
        return false;
      }
      if(this.data.login.code===''){
        this.$toast('验证码不能为空');
        return false;
      }
      let code=await wechat.getLoginCode();
      let res= await this.$api.user.login({
        code:code,
        mobile:this.data.login.phone,
        validateCode:this.data.login.code,
        ...this.data.params
      });
      if(res.rcode===300){
        wx.setStorageSync('accessToken', res.data.access_token);
        await this.getUserInfo();
        if(this.data.fromPath){
          this.$router.redirect(this.data.fromPath);
        }else{
          this.$router.redirect('/pages/home');
        }
      }else{
        this.$toast(res.message);
      }
    },
    async login(){
      let code=await wechat.getLoginCode();
      let res=await this.$api.user.login({code:code,...this.data.params});
      if(res.rcode===300){
        wx.setStorageSync('accessToken', res.data.access_token);
        await this.getUserInfo();
        if(this.data.fromPath){
          this.$router.redirect(this.data.fromPath);
        }else{
          this.$router.redirect('/pages/home');
        }
      }else{
        this.setData({
          isLoading:false
        })
      }
    },
    async getUserInfo(){
      let res=await this.$api.user.info();
      if(res.rcode===300){
        this.SetUserInfo({userInfo:res.data});
      }
      let result=await this.$api.classroom.get();
      if(result.rcode===300){
        this.SetClassList({classList:result.data.classList});
      }
    }
  }
})
</script>
<style lang="scss" src="./login.scss"></style>
